"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("services_ad_campaign_js",{

/***/ "./services/ad_campaign.js":
/*!*********************************!*\
  !*** ./services/ad_campaign.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AdCompaignBox; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\n/*\r\n\r\nfunction AdCompaignBoxOld({ position, data, classes, settings }) {\r\n    \r\n  \r\n      if (!data || !data.length) {\r\n        return null;\r\n      }\r\n    \r\n      const index = data.findIndex((x) => x.position === position);\r\n      if (index === -1) {\r\n        return null;\r\n      }\r\n    \r\n      var campaignBox = data[index].code;\r\n          campaignBox = `\r\n            {\r\n              \"sponser_type\": \"object\",\r\n              \"sponser_data\": {\r\n                \"style\": \"display:block; text-align:center;\",\r\n                \"data-ad-client\": \"xxxx\",\r\n                \"data-ad-layout\": \"xxxx\",\r\n                \"data-ad-slot\": \"xxxx\",\r\n                \"data-ad-format\": \"xxxx\",\r\n                \"data-full-width-responsive\": true\r\n              }\r\n            }\r\n          `\r\n        var props_data = null;\r\n      try {\r\n        props_data = JSON.parse(campaignBox);\r\n      } catch (error) {\r\n        return <i style={{background: '#f7e4e1', border: '1px solid red', color: 'red', width:'100%', height: '50px', display:'flex', flexDirection:'rows', justifyContent: 'center', alignItems:'center'}}>Sponsor ad box.</i>; \r\n      }\r\n  \r\n      const combinedClasses = classes ? `ad-box ${classes}` : 'ad-box';\r\n  \r\n      if( props_data.sponser_type == 'object' ) {\r\n          return <ins class=\"adsbygoogle\" {...props_data.sponser_data}></ins>\r\n      }\r\n        \r\n      return <div className={combinedClasses} dangerouslySetInnerHTML={{ __html: props_data.sponser_data }} />;\r\n      \r\n  }\r\n\r\n*/ /*\r\nexport default function AdCompaignBox({ position, data, classes, settings }) {\r\n  if (!data || !data.length) {\r\n    return null;\r\n  }\r\n\r\n  const index = data.findIndex((x) => x.position === position);\r\n  if (index === -1) {\r\n    return null;\r\n  }\r\n\r\n  var campaignBox = data[index].code; \r\n  var props_data = null;\r\n  try {\r\n    props_data = JSON.parse(campaignBox);\r\n  } catch (error) {\r\n    return (\r\n      <i\r\n        style={{\r\n          background: '#f7e4e1',\r\n          border: '1px solid red',\r\n          color: 'red',\r\n          width: '100%',\r\n          height: '50px',\r\n          display: 'flex',\r\n          flexDirection: 'rows',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        Sponsor ad box.\r\n      </i>\r\n    );\r\n  }\r\n\r\n  const combinedClasses = classes ? `ad-box ${classes}` : 'ad-box';\r\n\r\n  if (props_data.sponser_type === 'object') {\r\n    const { style, ...otherProps } = props_data.sponser_data;\r\n\r\n    // Convert style string to a React-compatible object with camelCase properties\r\n    const styleObject = {};\r\n    style.split(';').forEach((item) => {\r\n      const [property, value] = item.split(':');\r\n      if (property && value) {\r\n        const camelCaseProperty = property.trim().replace(/-([a-z])/g, (g) => g[1].toUpperCase());\r\n        styleObject[camelCaseProperty] = value.trim();\r\n      }\r\n    });\r\n\r\n    const dataAttributes = Object.keys(otherProps).reduce((acc, key) => {\r\n      if (key.startsWith('data-')) {\r\n        acc[key] = otherProps[key];\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    return <div className={combinedClasses}><ins className=\"adsbygoogle\" style={styleObject} {...dataAttributes}></ins></div>;\r\n  }\r\n\r\n  return <div className={combinedClasses} dangerouslySetInnerHTML={{ __html: props_data.sponser_data }} />;\r\n}\r\n*/ function AdCompaignBox(param) {\n    let { position, data, classes, settings } = param;\n    _s();\n    const [isAdSenseLoaded, setIsAdSenseLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    if (!data || !data.length) {\n        return null;\n    }\n    const index = data.findIndex((x)=>x.position === position);\n    if (index === -1) {\n        return null;\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (props_data.sponser_type === \"object\") {\n            if (!settings.google_ads.enabled) {\n                return;\n            }\n            // Check if the AdSense script is already present by id\n            const isAdSenseScriptPresent = document.getElementById(\"adsbygoogle-script-tag\");\n            // Check if window.adsbygoogle is available (script fully loaded)\n            const isAdSenseInitialized =  true && window.adsbygoogle;\n            if (!isAdSenseScriptPresent || !isAdSenseInitialized) {\n                const script = document.createElement(\"script\");\n                script.id = \"adsbygoogle-script-tag\";\n                script.src = \"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=\".concat(settings.google_ads.field);\n                script.async = true;\n                script.crossOrigin = \"anonymous\";\n                script.onload = ()=>{\n                    // Now that the script has loaded, check again if window.adsbygoogle is available\n                    if (typeof window.adsbygoogle !== \"undefined\") {\n                        setIsAdSenseLoaded(true);\n                    }\n                };\n                document.body.appendChild(script);\n            } else {\n                setIsAdSenseLoaded(true);\n            }\n        }\n    }, []);\n    return null;\n    var campaignBox = data[index].code;\n    var props_data = null;\n    try {\n        props_data = JSON.parse(campaignBox);\n    } catch (error) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {\n            style: {\n                background: \"#f7e4e1\",\n                border: \"1px solid red\",\n                color: \"red\",\n                width: \"100%\",\n                height: \"50px\",\n                display: \"flex\",\n                flexDirection: \"rows\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n            },\n            children: \"Sponsor ad box.\"\n        }, void 0, false, {\n            fileName: \"D:\\\\codedtag.com\\\\public\\\\views\\\\services\\\\ad_campaign.js\",\n            lineNumber: 173,\n            columnNumber: 7\n        }, this);\n    }\n    const combinedClasses = classes ? \"ad-box \".concat(classes) : \"ad-box\";\n    if (props_data.sponser_type === \"object\") {\n        if (!settings.google_ads.enabled) {\n            return null;\n        }\n        const { style, ...otherProps } = props_data.sponser_data;\n        // Convert style string to a React-compatible object with camelCase properties\n        const styleObject = {};\n        style.split(\";\").forEach((item)=>{\n            const [property, value] = item.split(\":\");\n            if (property && value) {\n                const camelCaseProperty = property.trim().replace(/-([a-z])/g, (g)=>g[1].toUpperCase());\n                styleObject[camelCaseProperty] = value.trim();\n            }\n        });\n        const dataAttributes = Object.keys(otherProps).reduce((acc, key)=>{\n            if (key.startsWith(\"data-\")) {\n                acc[key] = otherProps[key];\n            }\n            return acc;\n        }, {});\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: combinedClasses,\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ins\", {\n                    className: \"adsbygoogle\",\n                    style: styleObject,\n                    ...dataAttributes\n                }, void 0, false, {\n                    fileName: \"D:\\\\codedtag.com\\\\public\\\\views\\\\services\\\\ad_campaign.js\",\n                    lineNumber: 220,\n                    columnNumber: 9\n                }, this),\n                isAdSenseLoaded && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                    dangerouslySetInnerHTML: {\n                        __html: \"(adsbygoogle = window.adsbygoogle || []).push({});\"\n                    }\n                }, void 0, false, {\n                    fileName: \"D:\\\\codedtag.com\\\\public\\\\views\\\\services\\\\ad_campaign.js\",\n                    lineNumber: 222,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"D:\\\\codedtag.com\\\\public\\\\views\\\\services\\\\ad_campaign.js\",\n            lineNumber: 219,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: combinedClasses,\n        dangerouslySetInnerHTML: {\n            __html: props_data.sponser_data\n        }\n    }, void 0, false, {\n        fileName: \"D:\\\\codedtag.com\\\\public\\\\views\\\\services\\\\ad_campaign.js\",\n        lineNumber: 232,\n        columnNumber: 10\n    }, this);\n} /*\r\nexport default function AdCompaignBox({ position, data, classes, settings }) {\r\n  if (!data || !data.length) {\r\n    return null;\r\n  }\r\n\r\n  const index = data.findIndex((x) => x.position === position);\r\n  if (index === -1) {\r\n    return null;\r\n  }\r\n\r\n  var campaignBox = data[index].code; \r\n  var props_data = null;\r\n  try {\r\n    props_data = JSON.parse(campaignBox);\r\n  } catch (error) {\r\n    return (\r\n      <i\r\n        style={{\r\n          background: '#f7e4e1',\r\n          border: '1px solid red',\r\n          color: 'red',\r\n          width: '100%',\r\n          height: '50px',\r\n          display: 'flex',\r\n          flexDirection: 'rows',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        Sponsor ad box.\r\n      </i>\r\n    );\r\n  }\r\n\r\n  const combinedClasses = classes ? `ad-box ${classes}` : 'ad-box';\r\n\r\n  if (props_data.sponser_type === 'object') {\r\n    \r\n    const { style, ...otherProps } = props_data.sponser_data;\r\n\r\n    // Convert style string to a React-compatible object with camelCase properties\r\n    const styleObject = {};\r\n    style.split(';').forEach((item) => {\r\n      const [property, value] = item.split(':');\r\n      if (property && value) {\r\n        const camelCaseProperty = property.trim().replace(/-([a-z])/g, (g) => g[1].toUpperCase());\r\n        styleObject[camelCaseProperty] = value.trim();\r\n      }\r\n    });\r\n\r\n    // Extract the last part after the '-' from data-* attributes and map them to Adsense props\r\n    const dataAttributes = Object.keys(otherProps).reduce((acc, key) => {\r\n      if (key.startsWith('data-')) {\r\n        const propKey = key.split('-').pop(); // Extract the last part after '-'\r\n        acc[propKey] = otherProps[key]; // Map the last slug to the prop\r\n      }\r\n      return acc;\r\n    }, {});\r\n     \r\n    return <div className={combinedClasses}>\r\n      <Adsense style={styleObject} {...dataAttributes} />\r\n    </div>;\r\n  }\r\n\r\n  return <div className={combinedClasses} dangerouslySetInnerHTML={{ __html: props_data.sponser_data }} />;\r\n}\r\n\r\n*/ \n_s(AdCompaignBox, \"JQOx2DggeugKRZdTaCL61Lufh40=\");\n_c = AdCompaignBox;\nvar _c;\n$RefreshReg$(_c, \"AdCompaignBox\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./services/ad_campaign.js\n"));

/***/ })

});