{"version":3,"file":"static/chunks/pages/_app-6a99bc0fd9b4f7b0.js","mappings":"qFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,QACA,WACA,OAAeC,EAAQ,MACvB,EACA,oLCKe,SAASC,EAAMC,CAAwB,KAAxB,CAAEC,UAAAA,CAAS,CAAEC,UAAAA,CAAS,CAAE,CAAxBF,EA6B5B,IAAIG,EAAWD,KAAuBE,GAAvBF,EAAWG,QAAQ,EAAiBH,KAAaE,GAAbF,EAA0B,KAAMA,EAAUG,QAAQ,CAACF,QAAQ,CAwB9G,OAtBgB,MAAZA,GACJG,QAAQC,GAAG,CAACJ,EAASK,UAAU,CAACC,OAAO,EAGvCC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,GAAIP,GAAYA,EAASK,UAAU,CAACC,OAAO,CAAE,CAE3C,IAAME,EAAUC,SAASC,sBAAsB,CAAC,eAEhD,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQI,MAAM,CAAED,IAE7BE,CADiB,CAACF,EAAE,CACbG,YAAY,CAAC,4BAEtBC,CAAAA,YAAcvB,OAAOuB,WAAW,EAAI,EAAE,EAAErB,IAAI,CAAC,CAAC,GAKnDS,QAAQC,GAAG,CAAC,mCAAqCI,EAAQI,MAAM,CACjE,CACF,EAAG,CAACZ,EAAS,EAGX,GAAAgB,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAWC,IAAAA,SAAAA,WACZ,GAAAJ,EAAAK,GAAA,EAACvB,EAAAA,CAAW,GAAGC,CAAS,GAKrBC,MAAAA,GAAoBA,EAASsB,gBAAgB,CAAChB,OAAO,EACpD,GAAAU,EAAAC,IAAA,EAAAD,EAAAO,QAAA,YACE,GAAAP,EAAAK,GAAA,EAACG,IAAMA,CACLC,IAAK,+CAA+EC,MAAA,CAAhC1B,EAASsB,gBAAgB,CAACK,KAAK,EACnFC,SAAS,mBACTC,YAAY,cAGd,GAAAb,EAAAK,GAAA,EAACG,IAAMA,CACLM,GAAG,wBACHF,SAAS,mBACTG,wBAAyB,CACvBC,OAAQ,uNAI4CN,MAAA,CAAhC1B,EAASsB,gBAAgB,CAACK,KAAK,CAAC,0BAEtD,OAQJ3B,MAAAA,GAAoBA,EAASK,UAAU,CAACC,OAAO,EAC/C,GAAAU,EAAAK,GAAA,EAACG,IAAMA,CACLS,MAAK,GACLR,IAAK,yEAAmGC,MAAA,CAA1B1B,EAASK,UAAU,CAACsB,KAAK,EACvGC,SAAS,aACTC,YAAY,cAmBlB,GAAAb,EAAAC,IAAA,EAACiB,IAAIA,WACD,GAAAlB,EAAAK,GAAA,EAACc,OAAAA,CAAKC,IAAI,WAAWC,KAAK,yBAC1B,GAAArB,EAAAK,GAAA,EAACiB,OAAAA,CAAKC,KAAK,cAAcC,QAAQ,YACjC,GAAAxB,EAAAK,GAAA,EAACc,OAAAA,CAAKC,IAAI,OAAOC,KAAK,uBACtB,GAAArB,EAAAK,GAAA,EAACc,OAAAA,CAAKC,IAAI,mBAAmBC,KAAK,4BAI9C,wCEhIAI,EAAAC,OAAA,EAAkB,OAAS,iFAAoF,sDCD/GD,EAAAC,OAAA,CAAA/C,EAAA,6BCAA8C,EAAAC,OAAA,CAAA/C,EAAA","sources":["webpack://_N_E/","webpack://_N_E/./pages/_app.js","webpack://_N_E/./src/app/globals.css","webpack://_N_E/./node_modules/next/font/google/target.css","webpack://_N_E/./node_modules/next/head.js","webpack://_N_E/./node_modules/next/script.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return require(\"private-next-pages/_app.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  ","import { Poppins } from 'next/font/google';\r\nimport \"@/app/globals.css\"; // Import your global styles\r\nimport Head from 'next/head';\r\nimport Script from 'next/script';\r\nimport { useEffect } from 'react';\r\nconst poppins = Poppins({\r\n  weight: ['300', '400', '500', '600', '700', '800'],\r\n  subsets: ['latin'],\r\n  display: 'swap',\r\n});\r\n\r\nexport default function MyApp({ Component, pageProps }) {\r\n  \r\n  /*\r\n  google_analytics: {\r\n        enabled: {\r\n            type: Boolean,\r\n            trim: true,\r\n            default: false\r\n        },\r\n        field: {\r\n            type: String,\r\n            trim: true,\r\n            default: \"\"\r\n        },\r\n    },\r\n    google_ads: {\r\n        enabled: {\r\n            type: Boolean,\r\n            trim: true,\r\n            default: false\r\n        },\r\n        field: {\r\n            type: String,\r\n            trim: true,\r\n            default: \"\"\r\n        },\r\n    },\r\n  */\r\n  \r\n  var settings = (pageProps.upcoming == undefined || pageProps == undefined) ? null: pageProps.upcoming.settings; \r\n \r\n  if( settings != null )\r\n  console.log(settings.google_ads.enabled);\r\n\r\n\r\n  useEffect(() => {\r\n    if (settings && settings.google_ads.enabled) {\r\n      // Ensure this only runs once after ads have been rendered\r\n      const adSlots = document.getElementsByClassName('adsbygoogle');\r\n\r\n      for (var i = 0; i < adSlots.length; i++) {\r\n        const adSlot = adSlots[i];\r\n        if (!adSlot.hasAttribute('data-adsbygoogle-status')) {\r\n          // Initialize only if not already done\r\n          (adsbygoogle = window.adsbygoogle || []).push({});\r\n        }\r\n      }\r\n\r\n      // Optional: Log the number of ad slots found\r\n      console.log(\"Number of ad slots initialized: \" + adSlots.length);\r\n    }\r\n  }, [settings]);\r\n\r\n  return (\r\n    <div className={poppins.className}>\r\n        <Component {...pageProps} />\r\n        \r\n\r\n        {\r\n          // Google Analytics \r\n          (settings != null && settings.google_analytics.enabled) && (\r\n            <>\r\n              <Script\r\n                src={`https://www.googletagmanager.com/gtag/js?id=${settings.google_analytics.field}`}\r\n                strategy=\"afterInteractive\"\r\n                crossOrigin=\"anonymous\" \r\n              />\r\n\r\n              <Script\r\n                id=\"google-analytics-init\"\r\n                strategy=\"afterInteractive\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: `\r\n                    window.dataLayer = window.dataLayer || [];\r\n                    function gtag(){dataLayer.push(arguments);}\r\n                    gtag('js', new Date());\r\n                    gtag('config', '${settings.google_analytics.field}');\r\n                  `,\r\n                }}\r\n              />\r\n            </>\r\n          )\r\n        }\r\n\r\n        \r\n        { \r\n          ( settings != null && settings.google_ads.enabled ) && (\r\n            <Script\r\n              async\r\n              src={`https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=${settings.google_ads.field}`}\r\n              strategy=\"lazyOnload\"\r\n              crossOrigin=\"anonymous\"\r\n              /*onLoad={() => {\r\n                  // Once the AdSense script has loaded, find ad slots and initialize them\r\n                  var adSlots = document.getElementsByClassName('adsbygoogle');\r\n                  \r\n                  // Loop through all ad slots and initialize each one\r\n                  for (var i = 0; i < adSlots.length; i++) {\r\n                    (adsbygoogle = window.adsbygoogle || []).push({});\r\n                  }\r\n                  \r\n                  // Optional: Log the number of ad slots found\r\n                  console.log(\"Number of ad slots initialized: \" + adSlots.length);\r\n              }}*/\r\n            />\r\n          )  \r\n        } \r\n\r\n        \r\n\r\n        <Head>\r\n            <link rel=\"manifest\" href=\"/icons/manifest.json\" />\r\n            <meta name=\"theme-color\" content=\"#000000\" />\r\n            <link rel=\"icon\" href=\"/icons/favicon.ico\" />\r\n            <link rel=\"apple-touch-icon\" href=\"/icons/logo192.png\" /> \r\n        </Head>\r\n    </div>\r\n  );\r\n}\r\n\r\n ","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Poppins_8c73d4', '__Poppins_Fallback_8c73d4'\",\"fontStyle\":\"normal\"},\"className\":\"__className_8c73d4\"};","module.exports = require('./dist/shared/lib/head')\n","module.exports = require('./dist/client/script')\n"],"names":["window","__NEXT_P","push","__webpack_require__","MyApp","param","Component","pageProps","settings","undefined","upcoming","console","log","google_ads","enabled","useEffect","adSlots","document","getElementsByClassName","i","length","adSlot","hasAttribute","adsbygoogle","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","poppins","jsx","google_analytics","Fragment","Script","src","concat","field","strategy","crossOrigin","id","dangerouslySetInnerHTML","__html","async","Head","link","rel","href","meta","name","content","module","exports"],"sourceRoot":""}