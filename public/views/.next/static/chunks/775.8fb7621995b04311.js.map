{"version":3,"file":"static/chunks/775.8fb7621995b04311.js","mappings":"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","sources":["webpack://_N_E/./services/ad_campaign.js"],"sourcesContent":["import { useEffect, useState } from \"react\"; \r\n\r\n/*\r\n\r\nfunction AdCompaignBoxOld({ position, data, classes, settings }) {\r\n    \r\n  \r\n      if (!data || !data.length) {\r\n        return null;\r\n      }\r\n    \r\n      const index = data.findIndex((x) => x.position === position);\r\n      if (index === -1) {\r\n        return null;\r\n      }\r\n    \r\n      var campaignBox = data[index].code;\r\n          campaignBox = `\r\n            {\r\n              \"sponser_type\": \"object\",\r\n              \"sponser_data\": {\r\n                \"style\": \"display:block; text-align:center;\",\r\n                \"data-ad-client\": \"xxxx\",\r\n                \"data-ad-layout\": \"xxxx\",\r\n                \"data-ad-slot\": \"xxxx\",\r\n                \"data-ad-format\": \"xxxx\",\r\n                \"data-full-width-responsive\": true\r\n              }\r\n            }\r\n          `\r\n        var props_data = null;\r\n      try {\r\n        props_data = JSON.parse(campaignBox);\r\n      } catch (error) {\r\n        return <i style={{background: '#f7e4e1', border: '1px solid red', color: 'red', width:'100%', height: '50px', display:'flex', flexDirection:'rows', justifyContent: 'center', alignItems:'center'}}>Sponsor ad box.</i>; \r\n      }\r\n  \r\n      const combinedClasses = classes ? `ad-box ${classes}` : 'ad-box';\r\n  \r\n      if( props_data.sponser_type == 'object' ) {\r\n          return <ins class=\"adsbygoogle\" {...props_data.sponser_data}></ins>\r\n      }\r\n        \r\n      return <div className={combinedClasses} dangerouslySetInnerHTML={{ __html: props_data.sponser_data }} />;\r\n      \r\n  }\r\n\r\n*/\r\n\r\n\r\n/*\r\nexport default function AdCompaignBox({ position, data, classes, settings }) {\r\n  if (!data || !data.length) {\r\n    return null;\r\n  }\r\n\r\n  const index = data.findIndex((x) => x.position === position);\r\n  if (index === -1) {\r\n    return null;\r\n  }\r\n\r\n  var campaignBox = data[index].code; \r\n  var props_data = null;\r\n  try {\r\n    props_data = JSON.parse(campaignBox);\r\n  } catch (error) {\r\n    return (\r\n      <i\r\n        style={{\r\n          background: '#f7e4e1',\r\n          border: '1px solid red',\r\n          color: 'red',\r\n          width: '100%',\r\n          height: '50px',\r\n          display: 'flex',\r\n          flexDirection: 'rows',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        Sponsor ad box.\r\n      </i>\r\n    );\r\n  }\r\n\r\n  const combinedClasses = classes ? `ad-box ${classes}` : 'ad-box';\r\n\r\n  if (props_data.sponser_type === 'object') {\r\n    const { style, ...otherProps } = props_data.sponser_data;\r\n\r\n    // Convert style string to a React-compatible object with camelCase properties\r\n    const styleObject = {};\r\n    style.split(';').forEach((item) => {\r\n      const [property, value] = item.split(':');\r\n      if (property && value) {\r\n        const camelCaseProperty = property.trim().replace(/-([a-z])/g, (g) => g[1].toUpperCase());\r\n        styleObject[camelCaseProperty] = value.trim();\r\n      }\r\n    });\r\n\r\n    const dataAttributes = Object.keys(otherProps).reduce((acc, key) => {\r\n      if (key.startsWith('data-')) {\r\n        acc[key] = otherProps[key];\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    return <div className={combinedClasses}><ins className=\"adsbygoogle\" style={styleObject} {...dataAttributes}></ins></div>;\r\n  }\r\n\r\n  return <div className={combinedClasses} dangerouslySetInnerHTML={{ __html: props_data.sponser_data }} />;\r\n}\r\n*/\r\n\r\n\r\nexport default function AdCompaignBox({ position, data, classes, settings }) {\r\n   \r\n  const [isAdSenseLoaded, setIsAdSenseLoaded] = useState(false);\r\n  \r\n  if (!data || !data.length) {\r\n    return null;\r\n  }\r\n\r\n  const index = data.findIndex((x) => x.position === position);\r\n  if (index === -1) {\r\n    return null;\r\n  }\r\n  \r\n  useEffect(() => {\r\n    \r\n   \r\n    if( props_data.sponser_type === 'object' ) {\r\n\r\n      if( !settings.google_ads.enabled  ) { \r\n        return;\r\n      } \r\n\r\n      // Check if the AdSense script is already present by id\r\n      const isAdSenseScriptPresent = document.getElementById('adsbygoogle-script-tag');\r\n      \r\n      // Check if window.adsbygoogle is available (script fully loaded)\r\n      const isAdSenseInitialized = typeof window !== 'undefined' && window.adsbygoogle;\r\n      \r\n      if (!isAdSenseScriptPresent || !isAdSenseInitialized) {\r\n        const script = document.createElement('script');\r\n              script.id = 'adsbygoogle-script-tag';\r\n              script.src = `https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=${settings.google_ads.field}`;\r\n              script.async = true;\r\n              script.crossOrigin = 'anonymous';\r\n              script.onload = () => {\r\n                // Now that the script has loaded, check again if window.adsbygoogle is available\r\n                if (typeof window.adsbygoogle !== 'undefined') {\r\n                  setIsAdSenseLoaded(true);\r\n                }\r\n              };\r\n              document.body.appendChild(script); \r\n      } else {\r\n        setIsAdSenseLoaded(true);\r\n      }\r\n    \r\n    }\r\n\r\n  }, [])\r\n  \r\n  var campaignBox = data[index].code; \r\n  var props_data = null;\r\n  try {\r\n    props_data = JSON.parse(campaignBox);\r\n  } catch (error) {\r\n    return (\r\n      <i\r\n        style={{\r\n          background: '#f7e4e1',\r\n          border: '1px solid red',\r\n          color: 'red',\r\n          width: '100%',\r\n          height: '50px',\r\n          display: 'flex',\r\n          flexDirection: 'rows',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        Sponsor ad box.\r\n      </i>\r\n    );\r\n  }\r\n\r\n  const combinedClasses = classes ? `ad-box ${classes}` : 'ad-box';\r\n\r\n  if (props_data.sponser_type === 'object') {\r\n\r\n    if( !settings.google_ads.enabled  ) { \r\n      return null;\r\n    } \r\n\r\n    const { style, ...otherProps } = props_data.sponser_data;\r\n\r\n    // Convert style string to a React-compatible object with camelCase properties\r\n    const styleObject = {};\r\n    style.split(';').forEach((item) => {\r\n      const [property, value] = item.split(':');\r\n      if (property && value) {\r\n        const camelCaseProperty = property.trim().replace(/-([a-z])/g, (g) => g[1].toUpperCase());\r\n        styleObject[camelCaseProperty] = value.trim();\r\n      }\r\n    });\r\n\r\n    const dataAttributes = Object.keys(otherProps).reduce((acc, key) => {\r\n      if (key.startsWith('data-')) {\r\n        acc[key] = otherProps[key];\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    return (\r\n      <div className={combinedClasses}>\r\n        <ins className=\"adsbygoogle\" style={styleObject} {...dataAttributes}></ins>\r\n        {isAdSenseLoaded && (\r\n          <script\r\n            dangerouslySetInnerHTML={{\r\n              __html: `(adsbygoogle = window.adsbygoogle || []).push({});`,\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    ); \r\n  }\r\n\r\n  return <div className={combinedClasses} dangerouslySetInnerHTML={{ __html: props_data.sponser_data }} />;\r\n}\r\n\r\n\r\n\r\n/*\r\nexport default function AdCompaignBox({ position, data, classes, settings }) {\r\n  if (!data || !data.length) {\r\n    return null;\r\n  }\r\n\r\n  const index = data.findIndex((x) => x.position === position);\r\n  if (index === -1) {\r\n    return null;\r\n  }\r\n\r\n  var campaignBox = data[index].code; \r\n  var props_data = null;\r\n  try {\r\n    props_data = JSON.parse(campaignBox);\r\n  } catch (error) {\r\n    return (\r\n      <i\r\n        style={{\r\n          background: '#f7e4e1',\r\n          border: '1px solid red',\r\n          color: 'red',\r\n          width: '100%',\r\n          height: '50px',\r\n          display: 'flex',\r\n          flexDirection: 'rows',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        Sponsor ad box.\r\n      </i>\r\n    );\r\n  }\r\n\r\n  const combinedClasses = classes ? `ad-box ${classes}` : 'ad-box';\r\n\r\n  if (props_data.sponser_type === 'object') {\r\n    \r\n    const { style, ...otherProps } = props_data.sponser_data;\r\n\r\n    // Convert style string to a React-compatible object with camelCase properties\r\n    const styleObject = {};\r\n    style.split(';').forEach((item) => {\r\n      const [property, value] = item.split(':');\r\n      if (property && value) {\r\n        const camelCaseProperty = property.trim().replace(/-([a-z])/g, (g) => g[1].toUpperCase());\r\n        styleObject[camelCaseProperty] = value.trim();\r\n      }\r\n    });\r\n\r\n    // Extract the last part after the '-' from data-* attributes and map them to Adsense props\r\n    const dataAttributes = Object.keys(otherProps).reduce((acc, key) => {\r\n      if (key.startsWith('data-')) {\r\n        const propKey = key.split('-').pop(); // Extract the last part after '-'\r\n        acc[propKey] = otherProps[key]; // Map the last slug to the prop\r\n      }\r\n      return acc;\r\n    }, {});\r\n     \r\n    return <div className={combinedClasses}>\r\n      <Adsense style={styleObject} {...dataAttributes} />\r\n    </div>;\r\n  }\r\n\r\n  return <div className={combinedClasses} dangerouslySetInnerHTML={{ __html: props_data.sponser_data }} />;\r\n}\r\n\r\n*/"],"names":["AdCompaignBox","param","position","data","classes","settings","isAdSenseLoaded","setIsAdSenseLoaded","useState","length","index","findIndex","x","useEffect","props_data","sponser_type","google_ads","enabled","isAdSenseScriptPresent","document","getElementById","isAdSenseInitialized","window","adsbygoogle","script","createElement","id","src","concat","field","async","crossOrigin","onload","body","appendChild","campaignBox","code","JSON","parse","error","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","i","style","background","border","color","width","height","display","flexDirection","justifyContent","alignItems","combinedClasses","otherProps","sponser_data","styleObject","split","forEach","property","value","item","trim","replace","g","toUpperCase","dataAttributes","Object","keys","reduce","acc","key","startsWith","jsxs","div","className","ins","dangerouslySetInnerHTML","__html"],"sourceRoot":""}